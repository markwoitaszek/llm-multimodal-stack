# n8n Monitoring Service Docker Compose Configuration
# Extends the main docker-compose.yml

services:
  # n8n Monitoring Service
  n8n-monitoring:
    build:
      context: ./services/n8n-monitoring
      dockerfile: Dockerfile
    container_name: multimodal-n8n-monitoring
    ports:
      - "${N8N_MONITORING_PORT:-8008}:8008"
    environment:
      - N8N_MONITORING_HOST=${N8N_MONITORING_HOST:-0.0.0.0}
      - N8N_MONITORING_PORT=${N8N_MONITORING_PORT:-8008}
      - DEBUG=${DEBUG:-false}
      
      # n8n Integration
      - N8N_URL=${N8N_URL:-http://n8n:5678}
      - N8N_API_KEY=${N8N_API_KEY:-}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://n8n-monitoring:8008/webhooks/n8n}
      
      # AI Agents Integration
      - AI_AGENTS_URL=${AI_AGENTS_URL:-http://ai-agents:8003}
      
      # Database Configuration
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-multimodal}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      
      # Redis Configuration
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=7
      
      # Monitoring Configuration
      - MONITORING_INTERVAL=30
      - METRICS_RETENTION_DAYS=90
      - MAX_EXECUTION_HISTORY=1000
      
      # Alert Configuration
      - ALERT_EMAIL_ENABLED=true
      - ALERT_SLACK_ENABLED=true
      - ALERT_WEBHOOK_ENABLED=false
      
      # Alert Thresholds
      - ALERT_THRESHOLD_ERROR_RATE=5.0
      - ALERT_THRESHOLD_RESPONSE_TIME=30000
      - ALERT_THRESHOLD_FAILURE_COUNT=5
      
      # Email Configuration
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL:-}
      
      # Slack Configuration
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - SLACK_CHANNEL=#n8n-monitoring
      
      # WebSocket Configuration
      - WS_MAX_CONNECTIONS=100
      - WS_HEARTBEAT_INTERVAL=30
      
      # Performance Configuration
      - MAX_CONCURRENT_MONITORS=10
      - REQUEST_TIMEOUT=30
      
      # Security
      - SECRET_KEY=${N8N_MONITORING_SECRET_KEY}
      - ALLOWED_ORIGINS=*
      
      # Logging
      - LOG_LEVEL=INFO
    volumes:
      - n8n_monitoring_cache:/app/cache
      - ./services/n8n/workflow-templates:/app/workflow-templates:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_healthy
      ai-agents:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${N8N_MONITORING_PORT:-8008}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - multimodal-net

  # n8n Monitoring Dashboard (Optional)
  n8n-monitoring-dashboard:
    build:
      context: ./services/n8n-monitoring/dashboard
      dockerfile: Dockerfile
    container_name: multimodal-n8n-monitoring-dashboard
    ports:
      - "${N8N_MONITORING_DASHBOARD_PORT:-3003}:3000"
    environment:
      - REACT_APP_MONITORING_API_URL=${N8N_MONITORING_DASHBOARD_URL:-http://localhost:8008}
      - REACT_APP_WS_URL=${N8N_MONITORING_WS_URL:-ws://localhost:8008/ws}
    depends_on:
      n8n-monitoring:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - multimodal-net

volumes:
  n8n_monitoring_cache:
    driver: local

networks:
  multimodal-net:
    external: true