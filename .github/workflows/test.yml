name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11]
        test-type: [unit, integration, performance, e2e]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    
    - name: Start test services
      run: |
        docker-compose -f docker-compose.test.yml up -d
        # Wait for services to be healthy
        timeout 300 bash -c 'until docker-compose -f docker-compose.test.yml ps | grep -q "healthy"; do sleep 5; done'
    
    - name: Run unit tests
      if: matrix.test-type == 'unit'
      run: |
        pytest tests/unit/ -v --cov=services --cov-report=xml --cov-report=html
      env:
        TEST_ENVIRONMENT: testing
        TEST_DATABASE_URL: postgresql://test:test@localhost:5433/test_db
        TEST_REDIS_URL: redis://localhost:6380/0
        TEST_AI_AGENTS_URL: http://localhost:3001
        TEST_IDE_BRIDGE_URL: http://localhost:3005
        TEST_PROTOCOL_INTEGRATION_URL: http://localhost:3007
        TEST_REALTIME_COLLABORATION_URL: http://localhost:3008
        TEST_N8N_URL: http://localhost:5679
        TEST_N8N_MONITORING_URL: http://localhost:3009
    
    - name: Run integration tests
      if: matrix.test-type == 'integration'
      run: |
        pytest tests/integration/ -v --cov=services --cov-report=xml --cov-report=html
      env:
        TEST_ENVIRONMENT: testing
        TEST_DATABASE_URL: postgresql://test:test@localhost:5433/test_db
        TEST_REDIS_URL: redis://localhost:6380/0
        TEST_AI_AGENTS_URL: http://localhost:3001
        TEST_IDE_BRIDGE_URL: http://localhost:3005
        TEST_PROTOCOL_INTEGRATION_URL: http://localhost:3007
        TEST_REALTIME_COLLABORATION_URL: http://localhost:3008
        TEST_N8N_URL: http://localhost:5679
        TEST_N8N_MONITORING_URL: http://localhost:3009
    
    - name: Run performance tests
      if: matrix.test-type == 'performance'
      run: |
        pytest tests/performance/ -v --benchmark-only --benchmark-save=performance
      env:
        TEST_ENVIRONMENT: testing
        TEST_DATABASE_URL: postgresql://test:test@localhost:5433/test_db
        TEST_REDIS_URL: redis://localhost:6380/0
        TEST_AI_AGENTS_URL: http://localhost:3001
        TEST_IDE_BRIDGE_URL: http://localhost:3005
        TEST_PROTOCOL_INTEGRATION_URL: http://localhost:3007
        TEST_REALTIME_COLLABORATION_URL: http://localhost:3008
        TEST_N8N_URL: http://localhost:5679
        TEST_N8N_MONITORING_URL: http://localhost:3009
    
    - name: Run E2E tests
      if: matrix.test-type == 'e2e'
      run: |
        pytest tests/e2e/ -v --html=report.html --self-contained-html
      env:
        TEST_ENVIRONMENT: testing
        TEST_DATABASE_URL: postgresql://test:test@localhost:5433/test_db
        TEST_REDIS_URL: redis://localhost:6380/0
        TEST_AI_AGENTS_URL: http://localhost:3001
        TEST_IDE_BRIDGE_URL: http://localhost:3005
        TEST_PROTOCOL_INTEGRATION_URL: http://localhost:3007
        TEST_REALTIME_COLLABORATION_URL: http://localhost:3008
        TEST_N8N_URL: http://localhost:5679
        TEST_N8N_MONITORING_URL: http://localhost:3009
    
    - name: Upload coverage to Codecov
      if: matrix.test-type == 'unit' || matrix.test-type == 'integration'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: ${{ matrix.test-type }}
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.test-type }}
        path: |
          coverage.xml
          htmlcov/
          report.html
          .benchmarks/
    
    - name: Stop test services
      if: always()
      run: |
        docker-compose -f docker-compose.test.yml down -v

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        pip install bandit safety
    
    - name: Run security scan
      run: |
        bandit -r services/ -f json -o bandit-report.json
        safety check --json --output safety-report.json
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install code quality tools
      run: |
        pip install black flake8 isort mypy
    
    - name: Run code formatting check
      run: |
        black --check services/
        isort --check-only services/
    
    - name: Run linting
      run: |
        flake8 services/
    
    - name: Run type checking
      run: |
        mypy services/ --ignore-missing-imports

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build services
      run: |
        docker-compose -f docker-compose.yml build
    
    - name: Test service health
      run: |
        docker-compose -f docker-compose.yml up -d
        # Wait for services to start
        sleep 30
        # Test health endpoints
        curl -f http://localhost:3000/health
        curl -f http://localhost:3004/health
        curl -f http://localhost:3005/health
        curl -f http://localhost:3006/health
        curl -f http://localhost:3007/health
        curl -f http://localhost:5678/healthz
    
    - name: Stop services
      if: always()
      run: |
        docker-compose -f docker-compose.yml down -v