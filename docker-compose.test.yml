version: '3.8'

services:
  # Test database
  test-postgres:
    image: postgres:15-alpine
    container_name: test-postgres
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5433:5432"
    volumes:
      - test-postgres-data:/var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Redis
  test-redis:
    image: redis:7-alpine
    container_name: test-redis
    ports:
      - "6380:6379"
    volumes:
      - test-redis-data:/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test AI Agents service
  test-ai-agents:
    build:
      context: ./services/ai-agents
      dockerfile: Dockerfile
    container_name: test-ai-agents
    ports:
      - "3001:3000"
    environment:
      - ENVIRONMENT=testing
      - LOG_LEVEL=DEBUG
      - DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - REDIS_URL=redis://test-redis:6379/0
      - JWT_SECRET=test-secret-key
    volumes:
      - ./services/ai-agents:/app
    networks:
      - test-network
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test IDE Bridge service
  test-ide-bridge:
    build:
      context: ./services/ide-bridge
      dockerfile: Dockerfile
    container_name: test-ide-bridge
    ports:
      - "3005:3004"
    environment:
      - ENVIRONMENT=testing
      - LOG_LEVEL=DEBUG
      - AI_AGENTS_URL=http://test-ai-agents:3000
      - DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - REDIS_URL=redis://test-redis:6379/0
    volumes:
      - ./services/ide-bridge:/app
    networks:
      - test-network
    depends_on:
      test-ai-agents:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test Protocol Integration service
  test-protocol-integration:
    build:
      context: ./services/protocol-integration
      dockerfile: Dockerfile
    container_name: test-protocol-integration
    ports:
      - "3007:3005"
    environment:
      - ENVIRONMENT=testing
      - LOG_LEVEL=DEBUG
      - AI_AGENTS_URL=http://test-ai-agents:3000
      - IDE_BRIDGE_URL=http://test-ide-bridge:3004
      - DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - REDIS_URL=redis://test-redis:6379/0
    volumes:
      - ./services/protocol-integration:/app
    networks:
      - test-network
    depends_on:
      test-ai-agents:
        condition: service_healthy
      test-ide-bridge:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test Real-Time Collaboration service
  test-realtime-collaboration:
    build:
      context: ./services/realtime-collaboration
      dockerfile: Dockerfile
    container_name: test-realtime-collaboration
    ports:
      - "3008:3006"
    environment:
      - ENVIRONMENT=testing
      - LOG_LEVEL=DEBUG
      - DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - REDIS_URL=redis://test-redis:6379/0
      - AI_AGENTS_URL=http://test-ai-agents:3000
      - IDE_BRIDGE_URL=http://test-ide-bridge:3004
      - JWT_SECRET=test-secret-key
    volumes:
      - ./services/realtime-collaboration:/app
    networks:
      - test-network
    depends_on:
      test-ai-agents:
        condition: service_healthy
      test-ide-bridge:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test n8n service
  test-n8n:
    image: n8nio/n8n:latest
    container_name: test-n8n
    ports:
      - "5679:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=UTC
    volumes:
      - test-n8n-data:/home/node/.n8n
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test n8n Monitoring service
  test-n8n-monitoring:
    build:
      context: ./services/n8n-monitoring
      dockerfile: Dockerfile
    container_name: test-n8n-monitoring
    ports:
      - "3009:3007"
    environment:
      - ENVIRONMENT=testing
      - LOG_LEVEL=DEBUG
      - N8N_URL=http://test-n8n:5678
      - DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - REDIS_URL=redis://test-redis:6379/0
    volumes:
      - ./services/n8n-monitoring:/app
    networks:
      - test-network
    depends_on:
      test-n8n:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: test-runner
    volumes:
      - ./tests:/app/tests
      - ./services:/app/services
      - test-results:/app/test-results
    networks:
      - test-network
    depends_on:
      test-ai-agents:
        condition: service_healthy
      test-ide-bridge:
        condition: service_healthy
      test-protocol-integration:
        condition: service_healthy
      test-realtime-collaboration:
        condition: service_healthy
      test-n8n:
        condition: service_healthy
      test-n8n-monitoring:
        condition: service_healthy
    environment:
      - TEST_ENVIRONMENT=testing
      - TEST_DATABASE_URL=postgresql://test:test@test-postgres:5432/test_db
      - TEST_REDIS_URL=redis://test-redis:6379/0
      - TEST_AI_AGENTS_URL=http://test-ai-agents:3000
      - TEST_IDE_BRIDGE_URL=http://test-ide-bridge:3004
      - TEST_PROTOCOL_INTEGRATION_URL=http://test-protocol-integration:3005
      - TEST_REALTIME_COLLABORATION_URL=http://test-realtime-collaboration:3006
      - TEST_N8N_URL=http://test-n8n:5678
      - TEST_N8N_MONITORING_URL=http://test-n8n-monitoring:3007
    command: ["pytest", "tests/", "-v", "--cov=services", "--cov-report=html:/app/test-results/coverage", "--cov-report=xml:/app/test-results/coverage.xml", "--junitxml=/app/test-results/junit.xml"]

volumes:
  test-postgres-data:
  test-redis-data:
  test-n8n-data:
  test-results:

networks:
  test-network:
    driver: bridge