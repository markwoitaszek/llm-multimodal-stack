version: '3.8'

services:
  realtime-collaboration:
    build:
      context: ./services/realtime-collaboration
      dockerfile: Dockerfile
    container_name: realtime-collaboration
    ports:
      - "3006:3006"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - PORT=3006
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@postgres:5432/realtime_collaboration
      - JWT_SECRET=your-secret-key-change-in-production
      - AI_AGENTS_URL=http://ai-agents:3000
      - IDE_BRIDGE_URL=http://ide-bridge:3004
      - N8N_URL=http://n8n:5678
      - MAX_CONNECTIONS=1000
      - HEARTBEAT_INTERVAL=30
      - MESSAGE_QUEUE_SIZE=10000
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=60
    volumes:
      - ./services/realtime-collaboration:/app
      - realtime-collaboration-logs:/app/logs
    networks:
      - multimodal-llm-stack
    restart: unless-stopped
    depends_on:
      - ai-agents
      - ide-bridge
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: realtime-collaboration-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - multimodal-llm-stack
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: realtime-collaboration-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=realtime_collaboration
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - multimodal-llm-stack
    restart: unless-stopped

volumes:
  realtime-collaboration-logs:
  redis-data:
  postgres-data:

networks:
  multimodal-llm-stack:
    external: true