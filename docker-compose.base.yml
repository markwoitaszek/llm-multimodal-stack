# Base Docker Compose template for Multimodal LLM Stack
# This file contains shared configurations and templates to avoid duplication
version: '3.8'

# Shared configuration templates
x-common-variables: &common-variables
  POSTGRES_DB: ${POSTGRES_DB:-multimodal}
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  REDIS_PASSWORD: ${REDIS_PASSWORD:-}
  MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
  QDRANT__SERVICE__HTTP_PORT: 6333
  QDRANT__SERVICE__GRPC_PORT: 6334

# Standard health check templates (PRESERVED FROM WORKING CONFIGURATIONS)
x-health-check-standard: &health-check-standard
  interval: 30s
  timeout: 10s
  retries: 3

x-health-check-extended: &health-check-extended
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

x-health-check-slow: &health-check-slow
  interval: 60s
  timeout: 30s
  retries: 5
  start_period: 180s

x-health-check-fast: &health-check-fast
  interval: 10s
  timeout: 5s
  retries: 5

# Standard restart policy
x-restart-policy: &restart-policy
  restart: unless-stopped

# Standard network configuration
x-network: &network
  networks:
    - multimodal-net

# Standard volume configuration
x-volume-config: &volume-config
  driver: local

# Service-specific health check templates (EXACTLY PRESERVED)
x-health-check-qdrant: &health-check-qdrant
  test: ["CMD-SHELL", "pidof qdrant || exit 1"]
  <<: *health-check-extended

x-health-check-postgres: &health-check-postgres
  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
  <<: *health-check-standard

x-health-check-redis: &health-check-redis
  test: ["CMD", "redis-cli", "ping"]
  <<: *health-check-standard

x-health-check-minio: &health-check-minio
  test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  interval: 30s
  timeout: 10s
  retries: 5
  start_period: 60s

x-health-check-vllm: &health-check-vllm
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/v1/models', timeout=10)\""]
  <<: *health-check-slow

x-health-check-litellm: &health-check-litellm
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:4000/', timeout=5)\""]
  <<: *health-check-standard

x-health-check-multimodal-worker: &health-check-multimodal-worker
  test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
  <<: *health-check-standard

x-health-check-retrieval-proxy: &health-check-retrieval-proxy
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8002/health', timeout=5)\""]
  <<: *health-check-standard

x-health-check-ai-agents: &health-check-ai-agents
  test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-ai-agents-web: &health-check-ai-agents-web
  test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-memory-system: &health-check-memory-system
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8005/health', timeout=5)\""]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-search-engine: &health-check-search-engine
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8004/health', timeout=5)\""]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-openwebui: &health-check-openwebui
  test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-user-management: &health-check-user-management
  test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8006/health', timeout=5)\""]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

x-health-check-nginx: &health-check-nginx
  test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1/health"]
  <<: *health-check-standard

x-health-check-n8n: &health-check-n8n
  test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

# Test environment health checks (FASTER FOR TESTING)
x-health-check-postgres-test: &health-check-postgres-test
  test: ["CMD-SHELL", "pg_isready -U test_user -d test_multimodal"]
  <<: *health-check-fast

x-health-check-redis-test: &health-check-redis-test
  test: ["CMD", "redis-cli", "ping"]
  <<: *health-check-fast

x-health-check-qdrant-test: &health-check-qdrant-test
  test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
  <<: *health-check-fast

x-health-check-minio-test: &health-check-minio-test
  test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  <<: *health-check-fast

# Networks
networks:
  multimodal-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

# Volumes
volumes:
  postgres_data:
    <<: *volume-config
  redis_data:
    <<: *volume-config
  qdrant_data:
    <<: *volume-config
  minio_data:
    <<: *volume-config
  n8n_data:
    <<: *volume-config
  # Test volumes
  postgres_test_data:
    <<: *volume-config
  redis_test_data:
    <<: *volume-config
  qdrant_test_data:
    <<: *volume-config
  minio_test_data:
    <<: *volume-config


